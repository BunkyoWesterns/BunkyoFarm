import { useQueryClient } from "@tanstack/react-query"
import { YesOrNoModal } from "./YesOrNoModal"
import { Title } from "@mantine/core"
import { deleteExploit } from "@/utils/queries"
import { notifications } from "@mantine/notifications"
import { Exploit } from "@/utils/types"


export const DeleteExploitModal = ({ onClose, exploit }:{ onClose: () => void, exploit?: Exploit }) => {
    const queryClient = useQueryClient()

    return <YesOrNoModal
        open={ exploit != null }
        onClose={onClose}
        title={<Title order={3}>Deleting an exploit</Title>}
        onConfirm={()=>{
            if (exploit == null){
                onClose?.()
                return
            }
            deleteExploit(exploit?.id).then(()=>{
                notifications.show({ title: "Exploit deleted", message: `The exploit ${exploit?.name} has been deleted successfully`, color: "green" })
                queryClient.invalidateQueries({ queryKey: ["exploits"] })

            }).catch((err)=>{
                notifications.show({ title: "Error deleting the exploit", message: `An error occurred while deleting the exploit ${exploit?.name}: ${err.message}`, color: "red" })
            }).finally(()=>{ onClose() })
        }}
        size="xl"
        message={
        <>
            <span>Are you sure you want to delete the exploit <b>{exploit?.name}</b>?</span><br />
            <span style={{ color: "yellow" }}>This action could fail if the exploit has performed important actions on the platform!</span>
        </>
    }/>
}