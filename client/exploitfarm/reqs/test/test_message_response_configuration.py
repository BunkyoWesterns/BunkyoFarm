# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: {{VERSION_PLACEHOLDER}}
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exploitfarm.reqs.models.message_response_configuration import MessageResponseConfiguration

class TestMessageResponseConfiguration(unittest.TestCase):
    """MessageResponseConfiguration unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MessageResponseConfiguration:
        """Test MessageResponseConfiguration
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MessageResponseConfiguration`
        """
        model = MessageResponseConfiguration()
        if include_optional:
            return MessageResponseConfiguration(
                status = 'ok',
                message = '',
                response = exploitfarm.reqs.models.configuration.Configuration(
                    flag_regex = '', 
                    start_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    end_time = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tick_duration = 56, 
                    attack_mode = null, 
                    loop_attack_delay = 0, 
                    attack_time_tick_delay = 0, 
                    flag_timeout = 56, 
                    flag_submit_limit = 56, 
                    submit_delay = 0, 
                    submitter = 56, 
                    submitter_timeout = 56, 
                    authentication_required = True, 
                    password_hash = '', 
                    setup_status = null, )
            )
        else:
            return MessageResponseConfiguration(
        )
        """

    def testMessageResponseConfiguration(self):
        """Test MessageResponseConfiguration"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
