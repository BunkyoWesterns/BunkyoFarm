# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: {{VERSION_PLACEHOLDER}}
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from exploitfarm.reqs.models.exploit_dto import ExploitDTO

class TestExploitDTO(unittest.TestCase):
    """ExploitDTO unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ExploitDTO:
        """Test ExploitDTO
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ExploitDTO`
        """
        model = ExploitDTO()
        if include_optional:
            return ExploitDTO(
                id = '',
                name = '',
                language = 'python',
                status = 'active',
                last_upadte = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                service = None,
                created_by = None
            )
        else:
            return ExploitDTO(
                id = '',
                name = '',
                language = 'python',
                status = 'active',
                last_upadte = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                service = None,
                created_by = None,
        )
        """

    def testExploitDTO(self):
        """Test ExploitDTO"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
